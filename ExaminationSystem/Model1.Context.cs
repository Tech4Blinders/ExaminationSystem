//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExaminationSystem
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExaminationSystemEntities : DbContext
    {
        public ExaminationSystemEntities()
            : base("name=ExaminationSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Student_Exam_Course> Student_Exam_Course { get; set; }
        public virtual DbSet<Student_Exam_Question> Student_Exam_Question { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        public virtual int CalcResult(Nullable<int> std_id, Nullable<int> ex_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("Std_id", std_id) :
                new ObjectParameter("Std_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalcResult", std_idParameter, ex_idParameter);
        }
    
        public virtual int Delete_Department(Nullable<int> dept_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Department", dept_idParameter);
        }
    
        public virtual ObjectResult<string> Delete_Student(Nullable<int> std_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Student", std_idParameter);
        }
    
        public virtual ObjectResult<string> Delete_Student_Exam_Course(Nullable<int> std_id, Nullable<int> crs_id, Nullable<int> ex_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Student_Exam_Course", std_idParameter, crs_idParameter, ex_idParameter);
        }
    
        public virtual ObjectResult<Generate_Exam_Result> Generate_Exam(Nullable<int> std_id, Nullable<int> ex_id, Nullable<int> crs_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Generate_Exam_Result>("Generate_Exam", std_idParameter, ex_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<GetAnswers_Result> GetAnswers(Nullable<int> std_id, Nullable<int> ex_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("Std_id", std_id) :
                new ObjectParameter("Std_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAnswers_Result>("GetAnswers", std_idParameter, ex_idParameter);
        }
    
        public virtual ObjectResult<string> Insert_Department(Nullable<int> dept_id, string dept_name, string dept_loc, Nullable<int> supervisor_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var dept_nameParameter = dept_name != null ?
                new ObjectParameter("dept_name", dept_name) :
                new ObjectParameter("dept_name", typeof(string));
    
            var dept_locParameter = dept_loc != null ?
                new ObjectParameter("dept_loc", dept_loc) :
                new ObjectParameter("dept_loc", typeof(string));
    
            var supervisor_idParameter = supervisor_id.HasValue ?
                new ObjectParameter("supervisor_id", supervisor_id) :
                new ObjectParameter("supervisor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insert_Department", dept_idParameter, dept_nameParameter, dept_locParameter, supervisor_idParameter);
        }
    
        public virtual ObjectResult<string> Insert_Student(Nullable<int> std_id, string std_Fname, string std_Lname, string std_address, string std_phone, Nullable<int> std_age, Nullable<int> std_dpt, string std_email)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var std_FnameParameter = std_Fname != null ?
                new ObjectParameter("std_Fname", std_Fname) :
                new ObjectParameter("std_Fname", typeof(string));
    
            var std_LnameParameter = std_Lname != null ?
                new ObjectParameter("std_Lname", std_Lname) :
                new ObjectParameter("std_Lname", typeof(string));
    
            var std_addressParameter = std_address != null ?
                new ObjectParameter("std_address", std_address) :
                new ObjectParameter("std_address", typeof(string));
    
            var std_phoneParameter = std_phone != null ?
                new ObjectParameter("std_phone", std_phone) :
                new ObjectParameter("std_phone", typeof(string));
    
            var std_ageParameter = std_age.HasValue ?
                new ObjectParameter("std_age", std_age) :
                new ObjectParameter("std_age", typeof(int));
    
            var std_dptParameter = std_dpt.HasValue ?
                new ObjectParameter("std_dpt", std_dpt) :
                new ObjectParameter("std_dpt", typeof(int));
    
            var std_emailParameter = std_email != null ?
                new ObjectParameter("std_email", std_email) :
                new ObjectParameter("std_email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insert_Student", std_idParameter, std_FnameParameter, std_LnameParameter, std_addressParameter, std_phoneParameter, std_ageParameter, std_dptParameter, std_emailParameter);
        }
    
        public virtual ObjectResult<string> Insert_Student_Exam_Course(Nullable<int> std_id, Nullable<int> crs_id, Nullable<int> ex_id, Nullable<int> grade)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insert_Student_Exam_Course", std_idParameter, crs_idParameter, ex_idParameter, gradeParameter);
        }
    
        public virtual ObjectResult<string> Making_Exam(Nullable<int> std_id, Nullable<int> course_id, Nullable<int> no_mcq, Nullable<int> no_tf, string exam_type)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            var no_mcqParameter = no_mcq.HasValue ?
                new ObjectParameter("no_mcq", no_mcq) :
                new ObjectParameter("no_mcq", typeof(int));
    
            var no_tfParameter = no_tf.HasValue ?
                new ObjectParameter("no_tf", no_tf) :
                new ObjectParameter("no_tf", typeof(int));
    
            var exam_typeParameter = exam_type != null ?
                new ObjectParameter("exam_type", exam_type) :
                new ObjectParameter("exam_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Making_Exam", std_idParameter, course_idParameter, no_mcqParameter, no_tfParameter, exam_typeParameter);
        }
    
        public virtual ObjectResult<Show_All_Departments_Result> Show_All_Departments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_All_Departments_Result>("Show_All_Departments");
        }
    
        public virtual ObjectResult<Show_All_Student_Exam_Course_Result> Show_All_Student_Exam_Course()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_All_Student_Exam_Course_Result>("Show_All_Student_Exam_Course");
        }
    
        public virtual ObjectResult<Show_All_Student_Exam_Course_By_Course_Result> Show_All_Student_Exam_Course_By_Course(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_All_Student_Exam_Course_By_Course_Result>("Show_All_Student_Exam_Course_By_Course", crs_idParameter);
        }
    
        public virtual ObjectResult<Show_All_Student_Exam_Course_By_Exam_Result> Show_All_Student_Exam_Course_By_Exam(Nullable<int> ex_id)
        {
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_All_Student_Exam_Course_By_Exam_Result>("Show_All_Student_Exam_Course_By_Exam", ex_idParameter);
        }
    
        public virtual ObjectResult<Show_All_Student_Exam_Course_By_Student_Result> Show_All_Student_Exam_Course_By_Student(Nullable<int> std_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_All_Student_Exam_Course_By_Student_Result>("Show_All_Student_Exam_Course_By_Student", std_idParameter);
        }
    
        public virtual ObjectResult<Show_All_Students_Result> Show_All_Students()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Show_All_Students_Result>("Show_All_Students");
        }
    
        public virtual int SP_Add_Ins_Crs(Nullable<int> ins_id, Nullable<int> crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_Ins_Crs", ins_idParameter, crs_idParameter);
        }
    
        public virtual int SP_AddInstructor(Nullable<int> insid, string instname, Nullable<decimal> inssal, string insphone)
        {
            var insidParameter = insid.HasValue ?
                new ObjectParameter("insid", insid) :
                new ObjectParameter("insid", typeof(int));
    
            var instnameParameter = instname != null ?
                new ObjectParameter("instname", instname) :
                new ObjectParameter("instname", typeof(string));
    
            var inssalParameter = inssal.HasValue ?
                new ObjectParameter("inssal", inssal) :
                new ObjectParameter("inssal", typeof(decimal));
    
            var insphoneParameter = insphone != null ?
                new ObjectParameter("insphone", insphone) :
                new ObjectParameter("insphone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddInstructor", insidParameter, instnameParameter, inssalParameter, insphoneParameter);
        }
    
        public virtual int SP_AddInstructors(Nullable<int> insid, string instname, Nullable<decimal> inssal, string insphone)
        {
            var insidParameter = insid.HasValue ?
                new ObjectParameter("insid", insid) :
                new ObjectParameter("insid", typeof(int));
    
            var instnameParameter = instname != null ?
                new ObjectParameter("instname", instname) :
                new ObjectParameter("instname", typeof(string));
    
            var inssalParameter = inssal.HasValue ?
                new ObjectParameter("inssal", inssal) :
                new ObjectParameter("inssal", typeof(decimal));
    
            var insphoneParameter = insphone != null ?
                new ObjectParameter("insphone", insphone) :
                new ObjectParameter("insphone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddInstructors", insidParameter, instnameParameter, inssalParameter, insphoneParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<string> SP_Delete_Course(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Delete_Course", crs_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Delete_Exam(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Delete_Exam", examIdParameter);
        }
    
        public virtual int SP_Delete_Ins_Crs(Nullable<int> ins_id, Nullable<int> crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Ins_Crs", ins_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Delete_Question(Nullable<int> q_id)
        {
            var q_idParameter = q_id.HasValue ?
                new ObjectParameter("q_id", q_id) :
                new ObjectParameter("q_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Delete_Question", q_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Delete_StdQuesAnswer(Nullable<int> studId, Nullable<int> examId, Nullable<int> quesId)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("studId", studId) :
                new ObjectParameter("studId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Delete_StdQuesAnswer", studIdParameter, examIdParameter, quesIdParameter);
        }
    
        public virtual ObjectResult<string> SP_Delete_Topic(Nullable<int> topicId, string topicName)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("topicName", topicName) :
                new ObjectParameter("topicName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Delete_Topic", topicIdParameter, topicNameParameter);
        }
    
        public virtual int SP_DeleteInstructor(Nullable<int> insid)
        {
            var insidParameter = insid.HasValue ?
                new ObjectParameter("insid", insid) :
                new ObjectParameter("insid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteInstructor", insidParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_GET_Answeres_Of_Student_In_Exam_Result> SP_GET_Answeres_Of_Student_In_Exam(Nullable<int> exid, Nullable<int> stdid)
        {
            var exidParameter = exid.HasValue ?
                new ObjectParameter("exid", exid) :
                new ObjectParameter("exid", typeof(int));
    
            var stdidParameter = stdid.HasValue ?
                new ObjectParameter("stdid", stdid) :
                new ObjectParameter("stdid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Answeres_Of_Student_In_Exam_Result>("SP_GET_Answeres_Of_Student_In_Exam", exidParameter, stdidParameter);
        }
    
        public virtual ObjectResult<SP_Get_Course_And_Student_By_Instructor_ID_Result> SP_Get_Course_And_Student_By_Instructor_ID(Nullable<int> insid)
        {
            var insidParameter = insid.HasValue ?
                new ObjectParameter("insid", insid) :
                new ObjectParameter("insid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Course_And_Student_By_Instructor_ID_Result>("SP_Get_Course_And_Student_By_Instructor_ID", insidParameter);
        }
    
        public virtual ObjectResult<SP_Get_Questtions_And_Choices_Of_Exam_Result> SP_Get_Questtions_And_Choices_Of_Exam(Nullable<int> exid)
        {
            var exidParameter = exid.HasValue ?
                new ObjectParameter("exid", exid) :
                new ObjectParameter("exid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Questtions_And_Choices_Of_Exam_Result>("SP_Get_Questtions_And_Choices_Of_Exam", exidParameter);
        }
    
        public virtual ObjectResult<SP_Get_Students_From_Department_Result> SP_Get_Students_From_Department(Nullable<int> depno)
        {
            var depnoParameter = depno.HasValue ?
                new ObjectParameter("depno", depno) :
                new ObjectParameter("depno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Students_From_Department_Result>("SP_Get_Students_From_Department", depnoParameter);
        }
    
        public virtual ObjectResult<SP_Get_Topics_OF_Course_Result> SP_Get_Topics_OF_Course(Nullable<int> crsid)
        {
            var crsidParameter = crsid.HasValue ?
                new ObjectParameter("crsid", crsid) :
                new ObjectParameter("crsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Topics_OF_Course_Result>("SP_Get_Topics_OF_Course", crsidParameter);
        }
    
        public virtual ObjectResult<SP_GetAllInstructors_Result> SP_GetAllInstructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllInstructors_Result>("SP_GetAllInstructors");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Insert_Course(Nullable<int> crs_id, string crs_name, string crs_description, Nullable<int> crs_duration)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            var crs_descriptionParameter = crs_description != null ?
                new ObjectParameter("crs_description", crs_description) :
                new ObjectParameter("crs_description", typeof(string));
    
            var crs_durationParameter = crs_duration.HasValue ?
                new ObjectParameter("crs_duration", crs_duration) :
                new ObjectParameter("crs_duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Insert_Course", crs_idParameter, crs_nameParameter, crs_descriptionParameter, crs_durationParameter);
        }
    
        public virtual int SP_Insert_Exam(Nullable<int> examId, string examType, Nullable<int> nMCQ, Nullable<int> nTF)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var examTypeParameter = examType != null ?
                new ObjectParameter("examType", examType) :
                new ObjectParameter("examType", typeof(string));
    
            var nMCQParameter = nMCQ.HasValue ?
                new ObjectParameter("nMCQ", nMCQ) :
                new ObjectParameter("nMCQ", typeof(int));
    
            var nTFParameter = nTF.HasValue ?
                new ObjectParameter("nTF", nTF) :
                new ObjectParameter("nTF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Exam", examIdParameter, examTypeParameter, nMCQParameter, nTFParameter);
        }
    
        public virtual ObjectResult<string> SP_Insert_Question(Nullable<int> q_id, string question, string choice_1, string choice_2, string choice_3, string choice_4, string q_ans, Nullable<double> q_score, Nullable<int> crs_id)
        {
            var q_idParameter = q_id.HasValue ?
                new ObjectParameter("q_id", q_id) :
                new ObjectParameter("q_id", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var choice_1Parameter = choice_1 != null ?
                new ObjectParameter("choice_1", choice_1) :
                new ObjectParameter("choice_1", typeof(string));
    
            var choice_2Parameter = choice_2 != null ?
                new ObjectParameter("choice_2", choice_2) :
                new ObjectParameter("choice_2", typeof(string));
    
            var choice_3Parameter = choice_3 != null ?
                new ObjectParameter("choice_3", choice_3) :
                new ObjectParameter("choice_3", typeof(string));
    
            var choice_4Parameter = choice_4 != null ?
                new ObjectParameter("choice_4", choice_4) :
                new ObjectParameter("choice_4", typeof(string));
    
            var q_ansParameter = q_ans != null ?
                new ObjectParameter("q_ans", q_ans) :
                new ObjectParameter("q_ans", typeof(string));
    
            var q_scoreParameter = q_score.HasValue ?
                new ObjectParameter("q_score", q_score) :
                new ObjectParameter("q_score", typeof(double));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Insert_Question", q_idParameter, questionParameter, choice_1Parameter, choice_2Parameter, choice_3Parameter, choice_4Parameter, q_ansParameter, q_scoreParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Insert_StdQuesAnswer(Nullable<int> studId, Nullable<int> examId, Nullable<int> quesId, string answer)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("studId", studId) :
                new ObjectParameter("studId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Insert_StdQuesAnswer", studIdParameter, examIdParameter, quesIdParameter, answerParameter);
        }
    
        public virtual ObjectResult<string> SP_Insert_Topic(Nullable<int> topicId, string topicName, Nullable<int> courseId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("topicName", topicName) :
                new ObjectParameter("topicName", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Insert_Topic", topicIdParameter, topicNameParameter, courseIdParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_Select_Course_Result> SP_Select_Course()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Course_Result>("SP_Select_Course");
        }
    
        public virtual ObjectResult<SP_Select_Exam_Result> SP_Select_Exam(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Exam_Result>("SP_Select_Exam", examIdParameter);
        }
    
        public virtual ObjectResult<SP_Select_Question_Result> SP_Select_Question()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Question_Result>("SP_Select_Question");
        }
    
        public virtual ObjectResult<string> SP_Select_StdQuesAnswer(Nullable<int> studId, Nullable<int> examId, Nullable<int> quesId)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("studId", studId) :
                new ObjectParameter("studId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Select_StdQuesAnswer", studIdParameter, examIdParameter, quesIdParameter);
        }
    
        public virtual ObjectResult<string> SP_Select_Topic(Nullable<int> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Select_Topic", topicIdParameter);
        }
    
        public virtual ObjectResult<SP_Show_Ins_Crs_Result> SP_Show_Ins_Crs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Show_Ins_Crs_Result>("SP_Show_Ins_Crs");
        }
    
        public virtual ObjectResult<string> SP_Update_Course(Nullable<int> crs_id, string crs_name, string crs_description, Nullable<int> crs_duration)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            var crs_descriptionParameter = crs_description != null ?
                new ObjectParameter("crs_description", crs_description) :
                new ObjectParameter("crs_description", typeof(string));
    
            var crs_durationParameter = crs_duration.HasValue ?
                new ObjectParameter("crs_duration", crs_duration) :
                new ObjectParameter("crs_duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Update_Course", crs_idParameter, crs_nameParameter, crs_descriptionParameter, crs_durationParameter);
        }
    
        public virtual ObjectResult<string> SP_Update_Exam(Nullable<int> examId, string examType, Nullable<int> nMCQ, Nullable<int> nTF)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var examTypeParameter = examType != null ?
                new ObjectParameter("examType", examType) :
                new ObjectParameter("examType", typeof(string));
    
            var nMCQParameter = nMCQ.HasValue ?
                new ObjectParameter("nMCQ", nMCQ) :
                new ObjectParameter("nMCQ", typeof(int));
    
            var nTFParameter = nTF.HasValue ?
                new ObjectParameter("nTF", nTF) :
                new ObjectParameter("nTF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Update_Exam", examIdParameter, examTypeParameter, nMCQParameter, nTFParameter);
        }
    
        public virtual int SP_Update_Ins_Crs(Nullable<int> ins_id, Nullable<int> crs_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Ins_Crs", ins_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Update_Question(Nullable<int> q_id, string question, string choice_1, string choice_2, string choice_3, string choice_4, string q_ans, Nullable<double> q_score, Nullable<int> crs_id)
        {
            var q_idParameter = q_id.HasValue ?
                new ObjectParameter("q_id", q_id) :
                new ObjectParameter("q_id", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var choice_1Parameter = choice_1 != null ?
                new ObjectParameter("choice_1", choice_1) :
                new ObjectParameter("choice_1", typeof(string));
    
            var choice_2Parameter = choice_2 != null ?
                new ObjectParameter("choice_2", choice_2) :
                new ObjectParameter("choice_2", typeof(string));
    
            var choice_3Parameter = choice_3 != null ?
                new ObjectParameter("choice_3", choice_3) :
                new ObjectParameter("choice_3", typeof(string));
    
            var choice_4Parameter = choice_4 != null ?
                new ObjectParameter("choice_4", choice_4) :
                new ObjectParameter("choice_4", typeof(string));
    
            var q_ansParameter = q_ans != null ?
                new ObjectParameter("q_ans", q_ans) :
                new ObjectParameter("q_ans", typeof(string));
    
            var q_scoreParameter = q_score.HasValue ?
                new ObjectParameter("q_score", q_score) :
                new ObjectParameter("q_score", typeof(double));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Update_Question", q_idParameter, questionParameter, choice_1Parameter, choice_2Parameter, choice_3Parameter, choice_4Parameter, q_ansParameter, q_scoreParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<string> SP_Update_StdQuesAnswer(Nullable<int> studId, Nullable<int> examId, Nullable<int> quesId, string answer)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("studId", studId) :
                new ObjectParameter("studId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("quesId", quesId) :
                new ObjectParameter("quesId", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Update_StdQuesAnswer", studIdParameter, examIdParameter, quesIdParameter, answerParameter);
        }
    
        public virtual ObjectResult<string> SP_Update_Topic(Nullable<int> topicId, string topicName)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("topicId", topicId) :
                new ObjectParameter("topicId", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("topicName", topicName) :
                new ObjectParameter("topicName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Update_Topic", topicIdParameter, topicNameParameter);
        }
    
        public virtual int SP_UpdateInstructorData(Nullable<int> insid, string instname, Nullable<decimal> inssal, string insphone)
        {
            var insidParameter = insid.HasValue ?
                new ObjectParameter("insid", insid) :
                new ObjectParameter("insid", typeof(int));
    
            var instnameParameter = instname != null ?
                new ObjectParameter("instname", instname) :
                new ObjectParameter("instname", typeof(string));
    
            var inssalParameter = inssal.HasValue ?
                new ObjectParameter("inssal", inssal) :
                new ObjectParameter("inssal", typeof(decimal));
    
            var insphoneParameter = insphone != null ?
                new ObjectParameter("insphone", insphone) :
                new ObjectParameter("insphone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateInstructorData", insidParameter, instnameParameter, inssalParameter, insphoneParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> SubmitGrade(Nullable<int> std_id, Nullable<int> ex_id, Nullable<int> course_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("Std_id", std_id) :
                new ObjectParameter("Std_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SubmitGrade", std_idParameter, ex_idParameter, course_idParameter);
        }
    
        public virtual ObjectResult<string> Update_Department(Nullable<int> dept_id, string dept_name, string dept_loc, Nullable<int> supervisor_id)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var dept_nameParameter = dept_name != null ?
                new ObjectParameter("dept_name", dept_name) :
                new ObjectParameter("dept_name", typeof(string));
    
            var dept_locParameter = dept_loc != null ?
                new ObjectParameter("dept_loc", dept_loc) :
                new ObjectParameter("dept_loc", typeof(string));
    
            var supervisor_idParameter = supervisor_id.HasValue ?
                new ObjectParameter("supervisor_id", supervisor_id) :
                new ObjectParameter("supervisor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Update_Department", dept_idParameter, dept_nameParameter, dept_locParameter, supervisor_idParameter);
        }
    
        public virtual ObjectResult<string> Update_Student(Nullable<int> std_id, string std_Fname, string std_Lname, string std_address, string std_phone, Nullable<int> std_age, Nullable<int> std_dpt, string std_email)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var std_FnameParameter = std_Fname != null ?
                new ObjectParameter("std_Fname", std_Fname) :
                new ObjectParameter("std_Fname", typeof(string));
    
            var std_LnameParameter = std_Lname != null ?
                new ObjectParameter("std_Lname", std_Lname) :
                new ObjectParameter("std_Lname", typeof(string));
    
            var std_addressParameter = std_address != null ?
                new ObjectParameter("std_address", std_address) :
                new ObjectParameter("std_address", typeof(string));
    
            var std_phoneParameter = std_phone != null ?
                new ObjectParameter("std_phone", std_phone) :
                new ObjectParameter("std_phone", typeof(string));
    
            var std_ageParameter = std_age.HasValue ?
                new ObjectParameter("std_age", std_age) :
                new ObjectParameter("std_age", typeof(int));
    
            var std_dptParameter = std_dpt.HasValue ?
                new ObjectParameter("std_dpt", std_dpt) :
                new ObjectParameter("std_dpt", typeof(int));
    
            var std_emailParameter = std_email != null ?
                new ObjectParameter("std_email", std_email) :
                new ObjectParameter("std_email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Update_Student", std_idParameter, std_FnameParameter, std_LnameParameter, std_addressParameter, std_phoneParameter, std_ageParameter, std_dptParameter, std_emailParameter);
        }
    
        public virtual ObjectResult<string> Update_Student_Exam_Course(Nullable<int> std_id, Nullable<int> crs_id, Nullable<int> ex_id, Nullable<int> grade)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var ex_idParameter = ex_id.HasValue ?
                new ObjectParameter("ex_id", ex_id) :
                new ObjectParameter("ex_id", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Update_Student_Exam_Course", std_idParameter, crs_idParameter, ex_idParameter, gradeParameter);
        }
    }
}
